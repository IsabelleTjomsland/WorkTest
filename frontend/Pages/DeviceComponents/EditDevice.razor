@page "/edit-device"
@inject HttpClient Http
@inject NavigationManager Navigation

<h3>Edit Device</h3>

@if (device == null)
{
    <p>Loading...</p>
}
else
{
    <div class="mt-4">
        <div class="mb-3">
            <label for="deviceName">Name:</label>
            <input id="deviceName" type="text" @bind="device.Name" class="form-control" />
        </div>

        <div class="mb-3">
            <label for="deviceStatus">Status:</label>
            <div class="form-check form-switch">
                <input type="checkbox" id="deviceStatus" @bind="device.Status" class="form-check-input" />
            </div>
        </div>

        <button class="btn btn-primary mt-3" @onclick="SaveChanges">Save</button>
        <button class="btn btn-secondary mt-3" @onclick="Cancel">Cancel</button>
    </div>
}

@code {
    private Device device = new();

    protected override async Task OnInitializedAsync()
    {
        var uri = new Uri(Navigation.Uri);
        var query = System.Web.HttpUtility.ParseQueryString(uri.Query);
        var idString = query.Get("id");

        if (int.TryParse(idString, out int deviceId))
        {
            try
            {
                device = await Http.GetFromJsonAsync<Device>($"http://localhost:5246/api/devices/{deviceId}");
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error fetching device: {ex.Message}");
            }
        }
    }

    private async Task SaveChanges()
    {
        try
        {
            await Http.PutAsJsonAsync($"http://localhost:5246/api/devices/{device.Id}", device);
            Navigation.NavigateTo("/devices-management");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error updating device: {ex.Message}");
        }
    }

    private void Cancel()
    {
        Navigation.NavigateTo("/devices-management");
    }

    public class Device
    {
        public int Id { get; set; }
        public string Name { get; set; }
        public bool Status { get; set; }
    }
}
